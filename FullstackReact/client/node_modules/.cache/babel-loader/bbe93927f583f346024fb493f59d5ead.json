{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ghale\\\\OneDrive\\\\tutorial\\\\Hackeru\\\\HackerU-Projects\\\\Class-React-Project\\\\Fullstack-Book\\\\client\\\\src\\\\services\\\\cardService.js\",\n    _s = $RefreshSig$();\n\nimport http from \"./httpService\";\nimport { apiUrl } from \"../config.json\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function getCard(cardId) {\n  return http.get(`${apiUrl}/cards/${cardId}`);\n}\nexport function editCard(card) {\n  const cardId = card._id;\n  delete card._id;\n  return http.put(`${apiUrl}/cards/${cardId}`, card);\n}\nexport function getMyCards() {\n  return http.get(`${apiUrl}/cards/my-cards`);\n}\nexport function deleteCard() {\n  _s();\n\n  const [cards, setCards] = useState([]);\n  useEffect(() => {\n    if (localStorage.getItem(\"token\")) getMyCards(localStorage.getItem(\"token\"), data => {\n      setCards(data);\n    });\n  }, []);\n  return cards.map((c, index) => /*#__PURE__*/_jsxDEV(\"card\", {\n    handleClick: id => {\n      deleteCard(id, localStorage.getItem(\"token\"), card => {\n        setCards(cards.filter(x => x._id !== id));\n      });\n    },\n    card: c\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this));\n}\n\n_s(deleteCard, \"M51NroWgc5aUEHiqsZiaQ+7WeWA=\");\n\ne;\nexport function createCard(card) {\n  return http.post(`${apiUrl}/cards`, card);\n}\nexport default {\n  createCard,\n  getMyCards,\n  editCard,\n  getCard\n};","map":{"version":3,"sources":["C:/Users/ghale/OneDrive/tutorial/Hackeru/HackerU-Projects/Class-React-Project/Fullstack-Book/client/src/services/cardService.js"],"names":["http","apiUrl","useState","getCard","cardId","get","editCard","card","_id","put","getMyCards","deleteCard","cards","setCards","useEffect","localStorage","getItem","data","map","c","index","id","filter","x","e","createCard","post"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,eAAjB;AACA,SAASC,MAAT,QAAuB,gBAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,OAAO,SAASC,OAAT,CAAiBC,MAAjB,EAAyB;AAC9B,SAAOJ,IAAI,CAACK,GAAL,CAAU,GAAEJ,MAAO,UAASG,MAAO,EAAnC,CAAP;AACD;AAED,OAAO,SAASE,QAAT,CAAkBC,IAAlB,EAAwB;AAC7B,QAAMH,MAAM,GAAGG,IAAI,CAACC,GAApB;AACA,SAAOD,IAAI,CAACC,GAAZ;AACA,SAAOR,IAAI,CAACS,GAAL,CAAU,GAAER,MAAO,UAASG,MAAO,EAAnC,EAAsCG,IAAtC,CAAP;AACD;AAED,OAAO,SAASG,UAAT,GAAsB;AAC3B,SAAOV,IAAI,CAACK,GAAL,CAAU,GAAEJ,MAAO,iBAAnB,CAAP;AACD;AAED,OAAO,SAASU,UAAT,GAAsB;AAAA;;AAC3B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AACAY,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAJ,EACAN,UAAU,CAACK,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAD,EAAiCC,IAAD,IAAU;AAClDJ,MAAAA,QAAQ,CAACI,IAAD,CAAR;AACD,KAFS,CAAV;AAGD,GALQ,EAKN,EALM,CAAT;AAOA,SAAOL,KAAK,CAACM,GAAN,CAAU,CAACC,CAAD,EAAIC,KAAJ,kBACf;AACE,IAAA,WAAW,EAAIC,EAAD,IAAQ;AACpBV,MAAAA,UAAU,CAACU,EAAD,EAAKN,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAL,EAAqCT,IAAD,IAAU;AACtDM,QAAAA,QAAQ,CAACD,KAAK,CAACU,MAAN,CAAcC,CAAD,IAAOA,CAAC,CAACf,GAAF,KAAUa,EAA9B,CAAD,CAAR;AACD,OAFS,CAAV;AAGD,KALH;AAME,IAAA,IAAI,EAAEF;AANR,KAAWC,KAAX;AAAA;AAAA;AAAA;AAAA,UADK,CAAP;AAUD;;GAnBeT,U;;AAoBhBa,CAAC;AAED,OAAO,SAASC,UAAT,CAAoBlB,IAApB,EAA0B;AAC/B,SAAOP,IAAI,CAAC0B,IAAL,CAAW,GAAEzB,MAAO,QAApB,EAA6BM,IAA7B,CAAP;AACD;AAED,eAAe;AACbkB,EAAAA,UADa;AAEbf,EAAAA,UAFa;AAGbJ,EAAAA,QAHa;AAIbH,EAAAA;AAJa,CAAf","sourcesContent":["import http from \"./httpService\";\r\nimport { apiUrl } from \"../config.json\";\r\nimport { useState } from \"react\";\r\n\r\nexport function getCard(cardId) {\r\n  return http.get(`${apiUrl}/cards/${cardId}`);\r\n}\r\n\r\nexport function editCard(card) {\r\n  const cardId = card._id;\r\n  delete card._id;\r\n  return http.put(`${apiUrl}/cards/${cardId}`, card);\r\n}\r\n\r\nexport function getMyCards() {\r\n  return http.get(`${apiUrl}/cards/my-cards`);\r\n}\r\n\r\nexport function deleteCard() {\r\n  const [cards, setCards] = useState([]);\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"token\"))\r\n    getMyCards(localStorage.getItem(\"token\"), (data) => {\r\n      setCards(data);\r\n    });\r\n  }, []);\r\n  \r\n  return cards.map((c, index) => (\r\n    <card key={index}\r\n      handleClick= {(id) => {\r\n        deleteCard(id, localStorage.getItem(\"token\"), (card) => {\r\n          setCards(cards.filter((x) => x._id !== id));\r\n        });\r\n      }}\r\n      card={c}\r\n      ></card>\r\n  ));\r\n}\r\ne\r\n\r\nexport function createCard(card) {\r\n  return http.post(`${apiUrl}/cards`, card);\r\n}\r\n\r\nexport default {\r\n  createCard,\r\n  getMyCards,\r\n  editCard,\r\n  getCard\r\n};\r\n"]},"metadata":{},"sourceType":"module"}