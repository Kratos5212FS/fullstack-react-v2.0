{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ghale\\\\OneDrive\\\\tutorial\\\\Hackeru\\\\HackerU-Projects\\\\Class-React-Project\\\\Fullstack-Book\\\\client\\\\src\\\\components\\\\bizSignup.jsx\";\nimport React from \"react\";\nimport PageHeader from \"./common/pageHeader\";\nimport Joi from \"joi-browser\";\nimport Form from \"./common/form\";\nimport http from \"../services/httpService\";\nimport { apiUrl } from \"../config.json\";\nimport userService from \"../services/userService\";\nimport { Redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass BizSignup extends Form {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: {\n        email: \"\",\n        password: \"\",\n        name: \"\"\n      },\n      errors: {}\n    };\n    this.schema = {\n      email: Joi.string().required().email().label(\"Email\"),\n      password: Joi.string().required().min(6).label(\"Password\"),\n      name: Joi.string().required().min(2).label(\"Name\")\n    };\n\n    this.doSubmit = async () => {\n      const {\n        data\n      } = this.state;\n      data.biz = true;\n\n      try {\n        await http.post(`${apiUrl}/users`, data);\n        await userService.login(data.email, data.password);\n        window.location = \"/create-card\";\n      } catch (ex) {\n        if (ex.response && ex.response.status === 400) {\n          this.setState({\n            errors: {\n              email: \"Email is already taken\"\n            }\n          });\n        }\n      }\n    };\n  }\n\n  render() {\n    if (userService.getCurrentUser()) return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 46\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n        titleText: \"Business Registration Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Open business account for free!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-6\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: this.handleSubmit,\n            autoComplete: \"off\",\n            method: \"POST\",\n            children: [this.renderInput(\"email\", \"Email\", \"email\"), this.renderInput(\"password\", \"Password\", \"password\"), this.renderInput(\"name\", \"Name\"), this.renderButton(\"Next\")]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default BizSignup;","map":{"version":3,"sources":["C:/Users/ghale/OneDrive/tutorial/Hackeru/HackerU-Projects/Class-React-Project/Fullstack-Book/client/src/components/bizSignup.jsx"],"names":["React","PageHeader","Joi","Form","http","apiUrl","userService","Redirect","BizSignup","state","data","email","password","name","errors","schema","string","required","label","min","doSubmit","biz","post","login","window","location","ex","response","status","setState","render","getCurrentUser","handleSubmit","renderInput","renderButton"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport PageHeader from \"./common/pageHeader\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\nimport http from \"../services/httpService\";\r\nimport { apiUrl } from \"../config.json\";\r\nimport userService from \"../services/userService\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass BizSignup extends Form {\r\n  state = {\r\n    data: { email: \"\", password: \"\", name: \"\" },\r\n    errors: {}\r\n  };\r\n\r\n  schema = {\r\n    email: Joi.string()\r\n      .required()\r\n      .email()\r\n      .label(\"Email\"),\r\n    password: Joi.string()\r\n      .required()\r\n      .min(6)\r\n      .label(\"Password\"),\r\n    name: Joi.string()\r\n      .required()\r\n      .min(2)\r\n      .label(\"Name\")\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    const { data } = this.state;\r\n    data.biz = true;\r\n\r\n    try {\r\n      await http.post(`${apiUrl}/users`, data);\r\n      await userService.login(data.email, data.password);\r\n      window.location = \"/create-card\";\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        this.setState({ errors: { email: \"Email is already taken\" } });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (userService.getCurrentUser()) return <Redirect to=\"/\" />;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <PageHeader titleText=\"Business Registration Form\" />\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <p>Open business account for free!</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-6\">\r\n            <form onSubmit={this.handleSubmit} autoComplete=\"off\" method=\"POST\">\r\n              {this.renderInput(\"email\", \"Email\", \"email\")}\r\n              {this.renderInput(\"password\", \"Password\", \"password\")}\r\n              {this.renderInput(\"name\", \"Name\")}\r\n              {this.renderButton(\"Next\")}\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BizSignup;\r\n"]},"metadata":{},"sourceType":"module"}